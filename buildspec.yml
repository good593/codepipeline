version: 0.2
env:
  git-credential-helper: yes
  variables:
    # docker 파라미터 정의
    IMAGE_REPO_NAME: course-ecs-springboot-ecr # aws ecr에 등록이 되어 있는 name
    IMAGE_TAG: latest
    AWS_ACCOUNT_ID: 426653742146 # aws account id 정보
    AWS_DEFAULT_REGION: ap-northeast-2
    # package 파라미터 정의
    PACKAGE_S3_BUCKET: course-good593 # 만들어진 s3 이름

phases:
  pre_build:
    commands:
      # Docker push를 할 ECR에 로그인 필요
      # https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/get-login-password.html
      - echo Logging in to Amazon ECR...
      - aws --version
      - ECR_PASSWORD=$(aws ecr get-login-password --region $AWS_DEFAULT_REGION)
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - echo -n ${ECR_PASSWORD} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com


  build:
    commands:
      - echo Build started on `date`
      - echo building Source by SAM...
      - sam build --template template.yml

      - echo Building the Docker image...
      - docker build -f template/step_functions/EC2/functions/task_02_map_01_batch/Dockerfile -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo package Source...
      - sam package --s3-bucket $PACKAGE_S3_BUCKET --output-template-file outputtemplate.yml --s3-prefix build/sample

      - echo push the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

artifacts:
  files:
    - outputtemplate.yml
    - template.yml